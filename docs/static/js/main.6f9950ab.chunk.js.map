{"version":3,"sources":["reportWebVitals.ts","constants.ts","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","colors","combos","name","color","App","props","selected","state","combo","URLSearchParams","window","location","search","get","selectName","filter","c","toLowerCase","this","includes","s","push","length","hasMatch","setState","reducer","previousValue","currentValue","sort","reduce","className","map","co","onClick","selectColor","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f9950ab.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nexport interface Combo {\n    name: string;\n    color: string[]\n}\n\nexport const colors: string[] = ['White', 'Black', 'Blue', 'Red', 'Green'];\nexport const combos: Combo[] = [\n    { name: 'Pick a color', color: [] },\n    { name: 'All the colors', color: ['White', 'Black', 'Blue', 'Red', 'Green'] },\n    { name: 'Plains', color: ['White'] },\n    { name: 'Island', color: ['Blue'] },\n    { name: 'Mountain', color: ['Red'] },\n    { name: 'Swamp', color: ['Black'] },\n    { name: 'Forest', color: ['Green'] },\n    { name: 'Azorius', color: ['White', 'Blue'] },\n    { name: 'Boros', color: ['Red', 'White'] },\n    { name: 'Dimir', color: ['Blue', 'Black'] },\n    { name: 'Golgari', color: ['Black', 'Green'] },\n    { name: 'Gruul', color: ['Red', 'Green'] },\n    { name: 'Izzet', color: ['Blue', 'Red'] },\n    { name: 'Orzhov', color: ['White', 'Black'] },\n    { name: 'Rakdos', color: ['Black', 'Red'] },\n    { name: 'Selesnya', color: ['White', 'Green'] },\n    { name: 'Simic', color: ['Blue', 'Green'] },\n    { name: 'Abzan', color: ['White', 'Black', 'Green'] },\n    { name: 'Bant', color: ['White', 'Blue', 'Green'] },\n    { name: 'Esper', color: ['White', 'Blue', 'Black'] },\n    { name: 'Grixis', color: ['Blue', 'Black', 'Red'] },\n    { name: 'Jeskai', color: ['White', 'Blue', 'Red'] },\n    { name: 'Jund', color: ['Black', 'Red', 'Green'] },\n    { name: 'Mardu', color: ['White', 'Black', 'Red'] },\n    { name: 'Naya', color: ['White', 'Red', 'Green'] },\n    { name: 'Sultai', color: ['Blue', 'Black', 'Green'] },\n    { name: 'Temur', color: ['Blue', 'Red', 'Green'] },\n    { name: 'Glint', color: ['Black', 'Green', 'Blue', 'Red'] },\n    { name: 'Dune', color: ['White', 'Black', 'Green', 'Red'] },\n    { name: 'Ink', color: ['White', 'Green', 'Blue', 'Red'] },\n    { name: 'Witch', color: ['White', 'Black', 'Green', 'Blue'] },\n    { name: 'Yore', color: ['White', 'Black', 'Blue', 'Red'] }\n];\n\n\n","import \"./App.css\";\nimport { colors, combos, Combo } from \"./constants\";\nimport React, { Component } from \"react\";\n\ninterface IState {\n  combo: Combo;\n  selected: string[];\n}\ninterface IProps {}\nclass App extends Component<IProps, IState> {\n  public selected: string[] = [];\n\n  constructor(props: any) {\n    super(props);\n    this.state = { combo: combos[0], selected: [] };\n\n    const queryParameters = new URLSearchParams(window.location.search);\n    const name = queryParameters.get(\"name\");\n    if (!!name) {\n      this.selectName(name);\n    }\n  }\n\n  public selectName(name: string | null) {\n    const combo = combos!.filter(\n      (c) => c.name.toLowerCase() === name!.toLowerCase()\n    )[0];\n    this.selected = combo?.color;\n    this.state = { combo: combo, selected: combo.color };\n  }\n\n  public selectColor(color: string) {\n    let selected = [...this.state.selected];\n    selected.includes(color)\n    ? (selected = selected.filter((s) => s !== color))\n    : selected.push(color);\n\n    if (selected && selected.length) {\n      const combo = combos.filter((c) => {\n        if (c.color.length === selected.length && this.hasMatch(c.color, selected)) {\n          return c;\n        }\n      })[0];\n      this.setState({\n        combo,\n        selected\n      });\n    } else {\n      this.setState({\n        combo: combos[0],\n        selected\n      });\n    }\n  }\n\n  public hasMatch(colors: string[], selected: string[]): boolean {\n    let reducer = (previousValue: string, currentValue: Combo) =>\n      (previousValue += currentValue);\n    return (\n      colors.sort().reduce((previousValue, currentValue: any) => {\n        return reducer(previousValue, currentValue);\n      }) ===\n      selected.sort().reduce((previousValue, currentValue: any) => {\n        return reducer(previousValue, currentValue);\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <span className=\"options\">\n          {colors.map((co) => {\n            return (\n              <button\n                onClick={() => this.selectColor(co)}\n                className={`${co} ${\n                  this.state.selected.includes(co) ? \"selected\" : \"\"\n                }`}\n                key={co}\n              >\n                &nbsp;\n              </button>\n            );\n          })}\n        </span>\n        <h2 className=\"result\">\n          {this.state && this.state.combo\n            ? this.state.combo.name\n            : \"Pick a color\"}\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}